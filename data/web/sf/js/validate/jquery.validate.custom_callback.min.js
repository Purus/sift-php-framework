jQuery.validator.addMethod("customCallback",function(c,b,a){try{var e=a.callback.call(this,c,b,a)}catch(d){throw this.settings.debug&&window.console&&console.log("exception occured when checking element "+b.id+", check the 'customCallback' method",d),d;}return this.optional(b)||e},"Invalid value");jQuery.extend(jQuery.validator.messages,{customCallback:"Zadan\u00e1 hodnota nen\u00ed spr\u00e1vn\u011b."});
jQuery.validator.addMethod("notEqualTo",function(c,b,a){a=$(a).unbind(".validate-notEqualTo").bind("blur.validate-notEqualTo",function(){$(b).valid()});return c!=a.val()});jQuery.extend(jQuery.validator.messages,{notEqualTo:"Zadan\u00e9 hodnoty nesm\u00ed b\u00fdt stejn\u00e9."});
jQuery.validator.addMethod("regexPattern",function(c,b,a){var a=typeof a==="string"?a.match(/^\/(.*)\/([imu]*)$/):!1,e;if(a)try{e=RegExp(a[1],a[2].replace("u","")).test(c)}catch(d){throw this.settings.debug&&window.console&&console.log("exception occured when checking element "+b.id+", check the 'regexPattern' method",d),d;}return this.optional(b)||e});
jQuery.validator.addMethod("regexPatternNegative",function(c,b,a){var a=typeof a==="string"?a.match(/^\/(.*)\/([imu]*)$/):!1,e;if(a)try{e=!RegExp(a[1],a[2].replace("u","")).test(c)}catch(d){throw this.settings.debug&&window.console&&console.log("exception occured when checking element "+b.id+", check the 'regexPatternNegative' method",d),d;}return this.optional(b)||e});jQuery.extend(jQuery.validator.messages,{regexPattern:"Zadan\u00e1 hodnota nen\u00ed spr\u00e1vn\u011b."});
jQuery.validator.addMethod("fileSize",function(c,b,a){return this.optional(b)||b.files[0].size<=a});jQuery.extend(jQuery.validator.messages,{fileSize:"Soubor je p\u0159\u00edli\u0161 velk\u00fd."});
