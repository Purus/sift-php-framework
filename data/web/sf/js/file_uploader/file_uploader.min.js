(function(b,n){function m(b,a){var c,d;for(c in a)a.hasOwnProperty(c)&&(d=RegExp(c,"g"),b=b.replace(d,a[c]));return b}function f(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}if("undefined"==typeof b.fn.fileupload)throw Error("File upload is not loaded. File uploader will not work.");var h=function(e,a){this.options=b.extend(!0,{},b.fn.fileUploader.defaults,a);this.$element=b(e);this.support={dnd:"draggable"in document.createElement("span")};this.name=this.$element.attr("name");
this.$element.wrap('<div class="file-uploader-wrapper" />');this.$wrapper=this.$element.parent();this.$element.addClass("file-uploader-hidden");this.$button=b('<button type="button" class="file-uploader-button btn btn-upload">'+(this.options.buttonText?this.options.buttonText:this.options.messages.browseFiles)+"</button>");this.$button.insertAfter(this.$element);!this.$element.attr("multiple")&&"undefined"===typeof this.options.maxNumberOfFiles&&(this.options.maxNumberOfFiles=1);this.$form=this.$element.parents("form:first");
this.options.dropZone&&(this.options.dropZone instanceof jQuery||(this.options.dropZone=b(this.options.dropZone)),this.setupDropZone(this.options.dropZone));this.$queue=this.options.queue?this.options.queue:b("<div />").insertAfter(this.$wrapper);this.$queue.addClass("file-uploader-queue");this.$wrapper.fileupload({messages:this.options.messages,forceIframeTransport:this.options.forceIframeTransport,redirect:this.options.iframeRedirect,redirectParamName:this.options.iframeRedirectParameterName,url:this.options.url,
formData:"function"===typeof this.options.formData?this.options.formData:b.proxy(this.getFormData,this),headers:{"X-File-Uploader":this.version},dataType:"json",dropZone:this.options.dropZone||null,fileInput:this.$element,sequentialUploads:this.options.sequentialUploads,replaceFileInput:!1,acceptFileTypes:this.options.acceptFileTypes,maxNumberOfFiles:this.options.maxNumberOfFiles,getNumberOfFiles:b.proxy(this.getNumberOfFiles,this),maxFileSize:this.options.maxFileSize,maxChunkSize:this.options.maxChunkSize,
multipart:0<this.options.maxChunkSize?!1:!0}).on("fileuploadadd",b.proxy(this.onFileAddCallback,this)).on("fileuploadsend",b.proxy(this.onFileSendCallback,this)).on("fileuploadstart",b.proxy(this.onFileStartCallback,this)).on("fileuploadsubmit",b.proxy(this.onFileSubmitCallback,this)).on("fileuploadprocess",b.proxy(this.onFileProcessCallback,this)).on("fileuploadprocessfail",b.proxy(this.onFileProcessFailCallback,this)).on("fileuploadprocessdone",b.proxy(this.onFileProcessDoneCallback,this)).on("fileuploadstart",
b.proxy(this.onFileUploadStartCallback,this)).on("fileuploadprogress",b.proxy(this.onFileUploadProgressCallback,this)).on("fileuploadalways",b.proxy(this.onFileUploadAlwaysCallback,this))};h.prototype={constructor:h,version:"1.0.0",setupDropZone:function(e){e.addClass("file-uploader-drop-zone");if(this.support.dnd)e.on("dragover",function(a){b(this).addClass("hover")}).on("dragleave",function(a){b(this).removeClass("hover")}).on("drop",function(a){b(this).removeClass("hover")});else e.addClass("unsupported")},
getFormData:function(){var e=[];this.options.acceptFileTypes&&e.push({name:"_accept",value:this.options.acceptFileTypes});this.options.maxFileSize&&e.push({name:"_max_size",value:this.options.maxFileSize});this.options.formData&&(e=b.extend(e,this.$form.serializeArray()));return e},onFileAddCallback:function(e,a){this.$element.trigger("fileupload.added",e,a);var c=this.$element,d=c.clone(!0);b("<form></form>").append(d)[0].reset();c.after(d).detach();b.cleanData(c.unbind("remove"));this.$element=
b(d)},onFileSubmitCallback:function(b,a){var c=a.files[a.index],d=a.formData();d.push({name:"_uid",value:c.uid});a.formData=d;return!0},onFileProcessCallback:function(e,a){var c=this,d=a.files[a.index],k=d.uid=f()+f()+"-"+f()+"-"+f()+"-"+f()+"-"+f()+f()+f(),g=b(m(c.options.itemTemplate,{"{{type}}":d.type?d.type.split("/")[0]:"unknown","{{file}}":d.name,"{{cancel}}":c.options.messages.cancel,"{{size}}":"undefined"!==typeof d.size?"number"!==typeof d.size?"":1E9<=d.size?(d.size/1E9).toFixed(2)+" GB":
1E6<=d.size?(d.size/1E6).toFixed(2)+" MB":1E3<=d.size?(d.size/1E3).toFixed(0)+" kB":d.size.toFixed(0)+" B":""}));g.addClass("file-uploader-file-"+k);g.find("a.file-uploader-cancel").data("data",a).on("click",{uid:k},function(a){var d=b(this),e=d.data("data"),g=a.data.uid;e.xhr&&e.xhr.abort();e.abort().abort();c.$form.find('input[type="hidden"][name="'+c.name+'"]').filter(function(){return b.data(this,"uid")==g}).remove();d.parents(".file-uploader-item:first").fadeOut("fast",function(){b(this).remove()});
a.preventDefault()});g.addClass("queued").find(".file-uploader-state").html(c.options.messages.uploadInQueue);d.widget=g},onFileProcessFailCallback:function(b,a){var c=a.files[a.index];c.widget.addClass("error").find(".file-uploader-state").addClass("error").html(c.error);this.$queue.append(c.widget)},onFileProcessDoneCallback:function(b,a){a.xhr=a.submit();var c=a.files[a.index];c.widget.data("data",a);this.$queue.append(c.widget)},getNumberOfFiles:function(){return this.$queue.children(":not(.error)").length},
disableSubmits:function(){this.$form.find('input[type="submit"],button[type="submit"]').prop("disabled",!0).trigger("change")},enableSubmits:function(){this.$form.find('input[type="submit"],button[type="submit"]').prop("disabled",!1).trigger("change")},onFileUploadProgressCallback:function(b,a){var c=a.files[a.index],d=parseInt(100*(a.loaded/a.total),10);c.widget.find(".percentage").text(d.toFixed(0)+"%");c.widget.find(".bar").css("width",d+"%")},onFileStartCallback:function(b){this.disableSubmits()},
onFileSendCallback:function(b,a){var c=a.files[a.index],d=c.widget,c=c.widget.find(".file-uploader-state");d.removeClass("queued").addClass("in-progress");c.html(this.options.messages.uploadStarted)},onFileUploadAlwaysCallback:function(e,a){var c=!1,d=this.options.messages.uploaded,f=a.files[a.index],g=f.widget;if(a.result){var h=this.options.inputName||this.name;if(this.$form.length){var l="undefined"!==typeof a.result.files[a.index]?a.result.files[a.index]:{};l.id&&b('<input type="hidden" name="'+
h+'" value="'+l.id+'" />').data("uid",f.uid).insertAfter(this.$element)}}else c=!0,d="abort"==a.errorThrown?this.options.messages.aborted:this.options.messages.error;g.removeClass("in-progress").addClass("success");g.find(".percentage").hide().remove();g.find(".bar").css("width","100%");g.find(".file-uploader-state").removeClass("in-progress").addClass(c?"error":"success").html(d);this.enableSubmits()}};b.fn.fileUploader=function(e){return this.each(function(){var a=b(this),c=a.data("fileUploader"),
d="object"===typeof e&&e;c||a.data("fileUploader",c=new h(this,d));if("string"===typeof e)c[e]()})};b.fn.fileUploader.defaults={messages:{uploadedBytes:"Uploaded bytes exceed file size",maxNumberOfFiles:"Maximum number of files exceeded",acceptFileTypes:"File type not allowed",maxFileSize:"File is too large",minFileSize:"File is too small",browseFiles:"Browse files...",cancel:"cancel",notAvailable:"n/a",error:"Error occurred.",uploaded:"Successfully uploaded.",aborted:"Upload aborted.",uploadStarted:"Uploading in progress, please wait...",
uploadInQueue:"File queued for upload."},buttonText:!1,sequentialUploads:!0,forceIframeTransport:!1,iframeRedirect:"",iframeRedirectParameterName:"_redirect",formData:!1,maxNumberOfFiles:void 0,maxFileSize:1E7,maxChunkSize:0,acceptFileTypes:void 0,inputName:!1,dropZone:!1,queue:!1,url:"",itemTemplate:'<div class="file-uploader-item file-uploader-type-{{type}}">\n    <div class="file-uploader-info"><span class="file-uploader-filename">{{file}}</span> {{size}}</div>\n<span class="percentage"></span>\n    <a href="#" class="file-uploader-cancel"><strong> &times;</strong> {{cancel}}</a>\n    <div class="file-uploader-state"></div>\n    <div class="file-uploader-progress"><div class="bar" style="width: 0%;"></div></div>\n    </div>'};
b.fn.fileUploader.Constructor=h})(window.jQuery,window);
