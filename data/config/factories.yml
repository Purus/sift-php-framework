# You can find more information about this file on:
# https://bitbucket.org/mishal/sift-php-framework/wiki/Factories

# cli environment
cli:
  storage:
    class: sfNoStorage

# test environment
test:
  storage:
    class: sfSessionTestStorage
    arguments: [{ session_path : %SF_TEST_CACHE_DIR% }]

# default
default:
  controller:
    class: sfFrontWebController
    arguments: ["$context"]

  request:
    class: sfWebRequest
    arguments: ["$event_dispatcher"]

  response:
    class: sfWebResponse
    arguments:
     - $event_dispatcher
     - []
     - { title_mode: %APP_TITLE_MODE%, charset: %SF_CHARSET%}

  user:
    class: myUser
    arguments: ["$event_dispatcher", "@storage", "@request", { timeout: %SF_TIMEOUT%, default_culture: %SF_I18N_DEFAULT_CULTURE%, use_flash: %SF_USE_FLASH%, timezone_enabled: %SF_TIMEZONES_ENABLED% }]

  # session storage
  storage:
    class: sfSessionStorage
    arguments:
     - { session_cache_limiter: nocache }

  database_manager:
    class: sfDatabaseManager

  # view cache
  view_cache:
    class: sfFileCache
    arguments: [{ automatic_cleaning_factor: 0, cache_dir: %SF_TEMPLATE_CACHE_DIR% }]

  view_cache_manager:
    class: sfViewCacheManager
    arguments: ["$context", "@view_cache", { cache_key_use_vary_headers: true, cache_key_use_host_name: true} ]

  i18n:
    class: sfI18n
    arguments: ["$context", %SF_I18N_PARAM%]

  # mailer service
  mailer:
    class: sfMailer

  # text macro registry
  text_macro_registry:
    class: sfTextMacroRegistry
    arguments: ["@service_container", "$logger"]

  # text filters registry
  text_filters_registry:
    class: sfTextFilterRegistry
    arguments: ["@service_container", "$logger"]

  # less compiler
  less_compiler:
    class: sfLessCompiler
    arguments:
     - "$event_dispatcher"
     - { relative_url_root : %SF_RELATIVE_URL_ROOT%, cache_dir: %SF_CACHE_DIR% }

  # antivirus service
  antivirus:
    class: sfAntivirus
    constructor: factory
    arguments: [ clamavSocket, {}]
