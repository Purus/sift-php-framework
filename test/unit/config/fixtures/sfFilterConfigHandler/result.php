<?php
// auto-generated by sfFilterConfigHandler
// 
$filter = sfDependencyInjectionContainer::create('sfExecutionFilter');
if(!($filter instanceof sfIFilter))
{
  throw new LogicException(sprintf('The filter "%s" does not implement sfIFilter interface.', get_class($filter), 'sfExecutionFilter'));
}
$filter->initialize($this->context, array ());
$this->register($filter);

$filter = sfDependencyInjectionContainer::create('defaultFilterClass');
if(!($filter instanceof sfIFilter))
{
  throw new LogicException(sprintf('The filter "%s" does not implement sfIFilter interface.', get_class($filter), 'defaultFilterClass'));
}
$filter->initialize($this->context, null);
$this->register($filter);

$filter = sfDependencyInjectionContainer::create('newFilterClass');
if(!($filter instanceof sfIFilter))
{
  throw new LogicException(sprintf('The filter "%s" does not implement sfIFilter interface.', get_class($filter), 'newFilterClass'));
}
$filter->initialize($this->context, array('key' => 'value'));
$this->register($filter);

$filter = sfDependencyInjectionContainer::create('sfRenderingFilter');
if(!($filter instanceof sfIFilter))
{
  throw new LogicException(sprintf('The filter "%s" does not implement sfIFilter interface.', get_class($filter), 'sfRenderingFilter'));
}
$filter->initialize($this->context, array('key' => 'value'));
$this->register($filter);


