<?php
// auto-generated by sfFilterConfigHandler
// 
list($class, $parameters) = sfConfig::get('sf_execution_filter', array('sfExecutionFilter', array ()));
$filter = sfDependencyInjectionContainer::create($class);
if(!($filter instanceof sfIFilter))
{
  throw new LogicException(sprintf('The filter "%s" does not implement sfIFilter interface.', get_class($filter), 'sfExecutionFilter'));
}
$filter->initialize($this->context, $parameters);
$this->register($filter);

list($class, $parameters) = sfConfig::get('sf_default_filter', array('defaultFilterClass', null));
$filter = sfDependencyInjectionContainer::create($class);
if(!($filter instanceof sfIFilter))
{
  throw new LogicException(sprintf('The filter "%s" does not implement sfIFilter interface.', get_class($filter), 'defaultFilterClass'));
}
$filter->initialize($this->context, $parameters);
$this->register($filter);

list($class, $parameters) = sfConfig::get('sf_new_filter', array('newFilterClass', array('key' => 'value')));
$filter = sfDependencyInjectionContainer::create($class);
if(!($filter instanceof sfIFilter))
{
  throw new LogicException(sprintf('The filter "%s" does not implement sfIFilter interface.', get_class($filter), 'newFilterClass'));
}
$filter->initialize($this->context, $parameters);
$this->register($filter);

list($class, $parameters) = sfConfig::get('sf_rendering_filter', array('sfRenderingFilter', array('key' => 'value')));
$filter = sfDependencyInjectionContainer::create($class);
if(!($filter instanceof sfIFilter))
{
  throw new LogicException(sprintf('The filter "%s" does not implement sfIFilter interface.', get_class($filter), 'sfRenderingFilter'));
}
$filter->initialize($this->context, $parameters);
$this->register($filter);


