<?php
/*
 * This file is part of the Sift PHP framework.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

/**
 * sfSearchSourceConfigHandler parses configuration fo search sources
 *
 * @package Sift
 * @subpackage config
 */
class sfSearchSourceConfigHandler extends sfDefineEnvironmentConfigHandler {

 /**
   * Executes this configuration handler.
   *
   * @param  string An absolute filesystem path to a configuration file
   *
   * @return string Data to be written to a cache file
   *
   * @throws sfConfigurationException If a requested configuration file does not exist or is not readable
   * @throws sfParseException If a requested configuration file is improperly formatted
   */
  public function execute($configFiles)
  {
    // parse the yaml
    $myConfig = $this->mergeEnvironment(self::parseYamls($configFiles));

    $i = 0;
    foreach($myConfig['sources'] as $source => $params)
    {
      $i++;
      if(!isset($params['priority']))
      {
        $myConfig['sources'][$source]['priority'] = $i;
      }
      
      if(!isset($params['is_secure']))
      {
        $myConfig['sources'][$source]['is_secure'] = false;
      }
      
      if(!isset($params['credentials']))
      {
        $myConfig['sources'][$source]['credentials'] = false;
      }
    }
    
    // compile data
    $retval = "<?php\n".
              "// auto-generated by sfSearchSourceConfigHandler\n".
              "// date: %s\nreturn %s;\n";
    $retval = sprintf($retval, date('Y/m/d H:i:s'), var_export($myConfig, true));

    return $retval;
  }

}
