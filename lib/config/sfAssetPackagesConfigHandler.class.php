<?php
/*
 * This file is part of the Sift PHP framework.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

/**
 * sfAssetPackagesConfigHandler class
 *
 * @package    Sift
 * @subpackage config
 */
class sfAssetPackagesConfigHandler extends sfSimpleYamlConfigHandler {

/**
   * Executes this configuration handler.
   *
   * @param array An array of absolute filesystem path to a configuration file
   *
   * @return string Data to be written to a cache file
   *
   * @throws sfConfigurationException If a requested configuration file does not exist or is not readable
   * @throws sfParseException If a requested configuration file is improperly formatted
   */
  public function execute($configFiles)
  {
    // parse the yaml
    $myConfig = $this->parseYamls($configFiles);

    $config = sfToolkit::arrayDeepMerge(
      isset($myConfig['default']) && is_array($myConfig['default']) ? $myConfig['default'] : array(),
      isset($myConfig['all']) && is_array($myConfig['all']) ? $myConfig['all'] : array(),
      isset($myConfig[sfConfig::get('sf_environment')]) && is_array($myConfig[sfConfig::get('sf_environment')]) ? $myConfig[sfConfig::get('sf_environment')] : array()
    );

    if(!isset($config['packages']['core']))
    {
      throw new sfConfigurationException('{sfAssetPackagesConfigHandler} Missing core package setting in asset_packages.yml');
    }
    
    // validate
    if(!isset($config['packages']['jquery']))
    {
      throw new sfConfigurationException('{sfAssetPackagesConfigHandler} Missing jquery package setting in asset_packages.yml');
    }
    
    // replace standard constants
    $config = $this->replaceConstants($config);

    foreach($config['packages'] as $key => $value)
    {
      foreach($value as $vk => $vv)
      {
        // supported keys
        if(!in_array($vk, array('javascripts', 'stylesheets', 'require', 'i18n')))
        {
          throw new sfConfigurationException(sprintf('{sfAssetPackagesConfigHandler} Invalid configuration key "%s" key in your configuration.', $vk));
        }
      }
      
      if(!isset($value['javascripts'])) $config['packages'][$key]['javascripts'] = array();
      if(!isset($value['stylesheets'])) $config['packages'][$key]['stylesheets'] = array();
      if(!isset($value['require'])) $config['packages'][$key]['require'] = array();
      if(!isset($value['i18n'])) $config['packages'][$key]['i18n'] = array();
    }
    
    // compile data
    $retval = "<?php\n".
              "// auto-generated by %s\n".              
              "// date: %s\n".
              "sfAssetPackage::setConfig(%s);\n";    
    $retval = sprintf($retval, __CLASS__, date('Y/m/d H:i:s'), var_export($config, true));
    return $retval;
  }

}
