<?php
/*
 * This file is part of the Sift PHP framework.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

/**
 * sfDimensionsConfigHandler allows you to configure dimensions.
 *
 * @package    Sift
 * @subpackage config
 * @author     Dustin Whittle <dustin.whittle@symfony-project.com>
 * */
class sfDimensionsConfigHandler extends sfYamlConfigHandler
{
  /**
   * Execute this configuration handler.
   *
   * @param array An array of absolute filesystem path to a configuration file.
   *
   * @return string Data to be written to a cache file.
   *
   * @throws <b>sfConfigurationException</b> If a requested configuration file does not exist or is not readable.
   * @throws <b>sfParseException</b> If a requested configuration file is improperly formatted.
   * @throws <b>sfInitializationException</b> If a view.yml key check fails.
   */
  public function execute($configFiles)
  {
    // parse the yaml
    $myConfig = self::parseYamls($configFiles);

    $dimensions_available = $myConfig['dimensions'];

    $default_dimension = array();
    foreach($dimensions_available as $dimension)
    {
      $default_dimension[] = array_shift($dimension);
    }

    $default_dimension_dirs = array();

    $sfDimensionsConfig = "
class sfDimensionsConfig
{
  protected static \$instance = null;

  private static \$dimensions_available = array(".var_export($dimensions_available, true).");

  private static \$default_dimension = array(".var_export($default_dimension, true).");

  public static function getInstance()
  {
    if (!self::\$instance)
    {
      self::\$instance = new sfDimensionsConfig();
    }

    return self::\$instance;
  }

  public static function getAvailableDimensions()
  {
    return self::\$dimensions_available;
  }

  public static function getDefaultDimension()
  {
    return self::\$default_dimension;
  }
}
";

    unset($myConfig['default']);

    // compile data
    $retval = sprintf("<?php\n".
                      "// auto-generated by sfDimensionsConfigHandler\n".
                      "// date: %s\n\n
                      %s \n",
                      date('Y/m/d H:i:s'), $sfDimensionsConfig);

    return $retval;
  }
}
